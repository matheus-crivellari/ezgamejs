"use strict";function _defineProperty(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class Debug{static render(t,e,i){const{x:h,y:s,width:r,height:d}=t.rect;e.beginPath(),e.strokeStyle=i||t.color||"#ffff",e.lineWidth=2,e.strokeRect(h,s,r,d),e.closePath()}}class EzGame{static start(t){return(t=>{t.setupDisplay(),t.$input();const e=i=>{t.tick(i),t.$alive&&window.requestAnimationFrame(e)};window.requestAnimationFrame(e),t.$init()})(t)}static randomId(t){return((new Date).getTime()+1e3*Math.random()).toString(16).replace(".","")}}class Game{constructor(t,e,i){_defineProperty(this,"$id",void 0),_defineProperty(this,"domElement",null),_defineProperty(this,"parentDomElement",null),_defineProperty(this,"display",null),_defineProperty(this,"width",320),_defineProperty(this,"height",240),_defineProperty(this,"pixelPerfect",!0),_defineProperty(this,"paused",!1),_defineProperty(this,"playing",!0),_defineProperty(this,"$alive",!0),_defineProperty(this,"gameObjects",[]),_defineProperty(this,"isOver",!1),_defineProperty(this,"elapsedTime",0),_defineProperty(this,"$deltaTime",0),_defineProperty(this,"timeScale",1),_defineProperty(this,"displayWidth",0),_defineProperty(this,"displayHeight",0),_defineProperty(this,"buffer",null),_defineProperty(this,"init",()=>{}),_defineProperty(this,"input",()=>{}),_defineProperty(this,"update",()=>{}),_defineProperty(this,"lateUpdate",()=>{}),_defineProperty(this,"render",()=>{}),_defineProperty(this,"gui",()=>{}),_defineProperty(this,"gameOver",()=>{}),_defineProperty(this,"restart",()=>{}),this.$id=EzGame.randomId(),this.domElement=t,this.domElement&&(this.display=this.domElement.getContext("2d")),this.width=e||this.width,this.height=i||this.height,this.displayWidth=this.width,this.displayHeight=this.height,this.buffer={element:document.createElement("canvas"),context:null},this.buffer.context=this.buffer.element.getContext("2d")}add(t){t instanceof GameObject&&-1==this.gameObjects.indexOf(t)&&this.gameObjects.push(t),t instanceof Array&&t.map(t=>this.gameObjects.push(t))}remove(t){const e=this.gameObjects.indexOf(t);return this.gameObjects.splice(e,1)}kill(){this.$alive=!1}pause(){this.playing?(this.paused=!0,this.playing=!1):this.play()}play(){this.paused=!1,this.playing=!0}setupDisplay(){if(!this.domElement){const t=EzGame.randomId();this.domElement=document.createElement("CANVAS"),this.domElement.id=`$game_${t}`,(this.parentDomElement||document.body).appendChild(this.domElement)}this.pixelPerfect&&(this.domElement.style["image-rendering"]="pixelated"),this.display=this.domElement.getContext("2d"),this.buffer.element.width=this.width,this.buffer.element.height=this.height,this.domElement.width=this.width,this.domElement.height=this.height,this.display.fillStyle="#000",this.display.fillRect(0,0,this.width,this.height)}scale(t,e){this.domElement.style.width=`${t}px`,this.domElement.style.height=`${e}px`,this.displayWidth=t,this.displayHeight=e}reset(){this.isOver=!1,this.gameObjects.map(t=>{t.$alive=!0}),this.restart.apply(this,[this])}over(){this.isOver=!0,this.gameOver.apply(this,[this])}$init(){this.isOver=!1,this.init.apply(this,[this])}$input(){this.gameObjects.map(t=>t.$input(this)),this.input.apply(this,[this])}$update(){this.gameObjects.map(t=>t.$update(this)),this.update.apply(this,[this])}$lateUpdate(){this.lateUpdate.apply(this,[this])}$render(){const{width:t,height:e}=this;this.buffer.context.clearRect(0,0,t,e),this.buffer.context.fillStyle="#000",this.buffer.context.fillRect(0,0,t,e),this.gameObjects.map(t=>t.$render(this.buffer.context)),this.render.apply(this,[this,this.buffer.context]),this.display.clearRect(0,0,t,e),this.display.fillStyle="#000",this.display.fillRect(0,0,t,e),this.display.drawImage(this.buffer.element,0,0)}$gui(){this.gui.apply(this,[this])}tick(t){this.$alive&&(this.$deltaTime=(t-this.elapsedTime)/1e3,this.elapsedTime=t,this.playing&&(this.$update(),this.$lateUpdate()),this.$render(),this.$gui())}get ratio(){return this.displayWidth/this.width}get deltaTime(){return this.$deltaTime*this.timeScale}}class GameObject{constructor(t,e,i,h,s,r){_defineProperty(this,"$id",void 0),_defineProperty(this,"$alive",void 0),_defineProperty(this,"name",void 0),_defineProperty(this,"x",0),_defineProperty(this,"y",0),_defineProperty(this,"width",10),_defineProperty(this,"height",10),_defineProperty(this,"input",()=>{}),_defineProperty(this,"update",()=>{}),_defineProperty(this,"lateUpdate",()=>{}),_defineProperty(this,"render",()=>{}),_defineProperty(this,"gui",()=>{}),_defineProperty(this,"onDestroy",()=>{}),this.$id=EzGame.randomId(),this.$alive=!0,this.name=t||`$go_${this.$id}`,this.width=e||this.width,this.height=i||e||this.height,this.color=r||"#0f0f",this.x=h||this.x,this.y=s||this.y}$input(t){this.$alive&&this.input.apply(this,[this,t])}$update(t){this.$alive&&this.update.apply(this,[this,t])}$lateUpdate(){this.$alive&&this.lateUpdate.apply(this,[this])}$render(t){this.$alive&&this.render.apply(this,[this,t])}$gui(){this.$alive&&this.gui.apply(this,[this])}get hitBox(){return{left:this.x-this.width/2,top:this.y-this.height/2,right:this.x+this.width/2,bottom:this.y+this.height/2}}get rect(){return{x:this.x-this.width/2,y:this.y-this.height/2,width:this.width,height:this.height}}get pivot(){return{x:this.x,y:this.y}}set pivot(t){this.x=t.x,this.y=t.y}overlaps(t){if(!this.$alive)return!1;let{left:e,top:i,right:h,bottom:s}=this.hitBox,{left:r,top:d,right:n,bottom:a}=t.hitBox;return!(e>n)&&(!(h<r)&&(!(i>a)&&!(s<d)))}destroy(){this.$alive&&(this.$alive=!1,this.onDestroy.apply(this,[this]))}getIntersection(t){if(!this.overlaps(t))return null;let e=t.hitBox.left,i=t.hitBox.right,h=t.hitBox.top,s=t.hitBox.bottom;this.hitBox.left>e&&(e=this.hitBox.left),this.hitBox.right<i&&(i=this.hitBox.right),this.hitBox.top>h&&(h=this.hitBox.top),this.hitBox.bottom<s&&(s=this.hitBox.bottom);const r=i-e,d=s-h;return{x:e+r/2,y:h+d/2,width:r,height:d}}}